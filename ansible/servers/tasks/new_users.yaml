---
- name: Create a login user
  become: true
  ansible.builtin.user:
    name: "{{ users }}"
    password: "{{ ssh_password_encrypted }}"
    groups:
      - sudo
    shell: /bin/bash
    state: present
  loop:
    - "{{ ssh_user }}"
    - "{{ ssh_remote_user }}"
  loop_control:
    loop_var: users

- name: Add public key to authorized_keys
  become: true
  ansible.posix.authorized_key:
    user: "{{ users }}"
    state: present
    key: "{{ ssh_key }}"
  loop:
    - "{{ ssh_user }}"
    - "{{ ssh_remote_user }}"
  loop_control:
    loop_var: users

- name: Check if sudoers file exists
  when: ssh_remote_user is defined
  stat:
    path: /etc/sudoers.d/{{ ssh_remote_user }}
  register: sudoers_file

- name: Create sudoers file
  become: true
  when: ssh_remote_user is defined and not sudoers_file.stat.exists
  ansible.builtin.file:
    path: /etc/sudoers.d/{{ ssh_remote_user }}
    state: touch
    mode: 0644

- name: Add remote user to sudoers file
  become: true
  when: ssh_remote_user is defined and not sudoers_file.stat.exists
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/{{ ssh_remote_user }}
    regexp: '^{{ ssh_remote_user }}'
    line: '{{ ssh_remote_user }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
